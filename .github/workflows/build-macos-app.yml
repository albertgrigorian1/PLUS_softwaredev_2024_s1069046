name: Build macOS Universal App

on:
  push:
    branches:
      - main  # Trigger den Workflow bei einem Push auf den "main"-Branch
  pull_request:
    branches:
      - main  # Trigger den Workflow bei einem Pull Request auf den "main"-Branch

jobs:
  build:
    runs-on: macos-latest  # Verwende den neuesten macOS-Runner

    steps:
    # Checkout der Repository-Dateien
    - name: Checkout repository
      uses: actions/checkout@v3

    # Installiere Python und Abhängigkeiten
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'  # Verwende Python 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install img2pdf numpy pandas pyinstaller  # Installiere die benötigten Bibliotheken

    # Erstelle die Binärdatei für x86_64 (Intel)
    - name: Build macOS app for x86_64
      run: |
        arch -x86_64 pyinstaller --onefile --windowed --name "BewerberPDFs_x86_64" --distpath ./dist_x86_64 --workpath ./build_x86_64 bewerber_pdfs.py

    # Erstelle die Binärdatei für arm64 (Apple Silicon)
    - name: Build macOS app for arm64
      run: |
        arch -arm64 pyinstaller --onefile --windowed --name "BewerberPDFs_arm64" --distpath ./dist_arm64 --workpath ./build_arm64 bewerber_pdfs.py

    # Kombiniere die Binärdateien zu einer universellen Binärdatei
    - name: Create universal binary
      run: |
        lipo -create -output ./dist/BewerberPDFs ./dist_x86_64/BewerberPDFs_x86_64 ./dist_arm64/BewerberPDFs_arm64

    # Erstelle die .app-Datei
    - name: Create macOS .app bundle
      run: |
        mkdir -p BewerberPDFs.app/Contents/MacOS
        mkdir -p BewerberPDFs.app/Contents/Resources

        # Kopiere die universelle Binärdatei in das .app-Bundle
        cp ./dist/BewerberPDFs BewerberPDFs.app/Contents/MacOS/

        # Erstelle eine Info.plist-Datei für das .app-Bundle
        cat > BewerberPDFs.app/Contents/Info.plist <<EOL
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>CFBundleExecutable</key>
            <string>BewerberPDFs</string>
            <key>CFBundleIdentifier</key>
            <string>com.example.BewerberPDFs</string>
            <key>CFBundleName</key>
            <string>BewerberPDFs</string>
            <key>CFBundleVersion</key>
            <string>1.0</string>
            <key>CFBundleShortVersionString</key>
            <string>1.0</string>
            <key>CFBundleIconFile</key>
            <string>AppIcon.icns</string>  # Optional: Icon-Datei
            <key>NSHighResolutionCapable</key>
            <true/>
        </dict>
        </plist>
        EOL

        # Optional: Füge ein Icon hinzu (falls vorhanden)
        # cp AppIcon.icns BewerberPDFs.app/Contents/Resources/

    # Archive das Ergebnis als Artefakt
    - name: Archive .app bundle
      uses: actions/upload-artifact@v4
      with:
        name: BewerberPDFs-universal
        path: BewerberPDFs.app  # Der Pfad zur erstellten .app-Datei
